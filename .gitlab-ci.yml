stages:
  - test
  - build
  - deploy
  - rollback

test:
  stage: test
  script:
    - if [ -n "$CI_COMMIT_TAG" ]; then echo "with tag"; else echo "no tag"; fi
    - echo "Running unit tests"

build:
  stage: build
  needs: ["test"]
  image: 
    name: docker:latest
  services:
    - docker:19-dind
  before_script: 
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - aws configure set aws_access_key_id AKIA54RGBLJCQ3MJ2SV6
    - aws configure set aws_secret_access_key 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
    - aws configure set default.region eu-west-1
    - aws ecr get-login-password | docker login --username AWS --password-stdin 954636261957.dkr.ecr.eu-west-1.amazonaws.com/sibros
    # - LAST_IMAGE_TAG=$(aws ecr describe-images --repository-name sibros --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]')
    # - echo $LAST_IMAGE_TAG
    # - MANIFEST=$(aws ecr batch-get-image --repository-name sibros --image-ids imageTag=$LAST_IMAGE_TAG --output json | jq --raw-output --join-output '.images[0].imageManifest')
    # - echo $MANIFEST
    # - aws ecr put-image --repository-name sibros --image-tag rollback --image-manifest "$MANIFEST" 
    # - aws --version
    # - docker info
    # - docker --version
  script:
    - if [ -n "$CI_COMMIT_TAG" ]; then docker build -t 954636261957.dkr.ecr.eu-west-1.amazonaws.com/sibros:$CI_COMMIT_TAG . ; else docker build -t 954636261957.dkr.ecr.eu-west-1.amazonaws.com/sibros:$CI_COMMIT_SHORT_SHA . ; fi
    - if [ -n "$CI_COMMIT_TAG" ]; then docker push 954636261957.dkr.ecr.eu-west-1.amazonaws.com/sibros:$CI_COMMIT_TAG; else docker push 954636261957.dkr.ecr.eu-west-1.amazonaws.com/sibros:$CI_COMMIT_SHORT_SHA; fi


deploy:
  stage: deploy
  needs: ["build"]
  script:
    - apt update -y
    - apt install -y curl python3-pip
    - pip3 install typing
    - pip3 install --upgrade botocore==1.21.57
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
    - export AWS_ACCESS_KEY_ID=AKIA54RGBLJCQ3MJ2SV6
    - export AWS_SECRET_ACCESS_KEY=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
    - export AWS_DEFAULT_REGION=eu-west-1
    - aws sts get-caller-identity
    - aws eks --region eu-west-1 update-kubeconfig --name CofeApp
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl version --client
    - ARGO_PWD=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo)
    - ARGO_DOMAIN=abb9cc7f4854e4143aa9970e537cc823-1427695546.eu-west-1.elb.amazonaws.com
    - curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
    - chmod +x /usr/local/bin/argocd
    - argocd login $ARGO_DOMAIN --username admin --password $ARGO_PWD --insecure
    - curl -LO https://github.com/argoproj/argo-rollouts/releases/latest/download/kubectl-argo-rollouts-linux-amd64
    - chmod +x ./kubectl-argo-rollouts-linux-amd64
    - mv ./kubectl-argo-rollouts-linux-amd64 /usr/local/bin/kubectl-argo-rollouts
    - kubectl get pods
    - if [ -n "$CI_COMMIT_TAG" ]; then kubectl argo rollouts set image sibros sibros=954636261957.dkr.ecr.eu-west-1.amazonaws.com/sibros:$CI_COMMIT_TAG; else kubectl argo rollouts set image sibros sibros=954636261957.dkr.ecr.eu-west-1.amazonaws.com/sibros:$CI_COMMIT_SHORT_SHA; fi
    # - argocd app sync sibrostest

rollback:
  stage: rollback
  needs: ["deploy"]
  rules:
    - when: manual
  script:
    - apt update -y
    - apt install -y curl python3-pip
    - pip3 install awscli typing
    - pip3 install --upgrade botocore==1.21.57
    - export AWS_ACCESS_KEY_ID=AKIA54RGBLJCQ3MJ2SV6
    - export AWS_SECRET_ACCESS_KEY=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
    - export AWS_DEFAULT_REGION=eu-west-1
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl version --client
    - aws sts get-caller-identity
    - aws eks --region eu-west-1 update-kubeconfig --name CofeApp
    - kubectl set image deployment/sibros sibros=954636261957.dkr.ecr.eu-west-1.amazonaws.com/sibros:rollback
